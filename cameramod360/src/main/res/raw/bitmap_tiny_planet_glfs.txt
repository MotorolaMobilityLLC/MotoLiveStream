precision highp float;
uniform mat4 u_STMatrix;
varying vec2 v_Position;
uniform sampler2D u_Texture;
uniform float u_Alpha;
uniform float u_Roll;
void main() {
    float x = v_Position.x;
    float y = v_Position.y;
    float limit = sqrt(2.0f)/2.0f;
    if (abs(x) > limit || abs(y) > limit) discard;
    float r = length(v_Position);
    if (r > 1.0f) discard;
    float theta = atan(y, x) - u_Roll;
    vec2 textureCoord = vec2(1.0f - ((theta + radians(180.0f)) / radians(360.0f)), (2.0f * atan(1.0f / r)) / radians(90.0f));
    vec4 wrappedTextureCoord = u_STMatrix * vec4(fract(textureCoord), 0.0f, 1.0f);
    gl_FragColor = texture2D(u_Texture, wrappedTextureCoord.xy) * u_Alpha;
}
